<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AlphaSynth</name>
    </assembly>
    <members>
        <member name="P:AlphaSynth.AlphaSynth.IsReady">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.IsReadyForPlayback">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.State">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.LogLevel">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.MasterVolume">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.MetronomeVolume">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.PlaybackSpeed">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.TickPosition">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.TimePosition">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.PlaybackRange">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.AlphaSynth.IsLooping">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.Play">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.Pause">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.PlayPause">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.Stop">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.LoadSoundFont(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.LoadMidi(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.SetChannelMute(System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.ResetChannelStates">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.SetChannelSolo(System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.SetChannelVolume(System.Int32,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.SetChannelPan(System.Int32,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:AlphaSynth.AlphaSynth.SetChannelProgram(System.Int32,System.Byte)">
            <inheritdoc />
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.IsReady">
            <summary>
            Gets or sets whether the synthesizer is ready for interaction. (output and worker are initialized)
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.IsReadyForPlayback">
            <summary>
            Gets or sets whether the synthesizer is ready for playback. (output, worker are initialized, soundfont and midi are loaded)
            </summary>p
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.State">
            <summary>
            Gets the current player state.
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.LogLevel">
            <summary>
            Gets or sets the loging level. 
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.MasterVolume">
            <summary>
            Gets or sets the current master volume as percentage. (range: 0.0-3.0, default 1.0)
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.MetronomeVolume">
            <summary>
            Gets or sets the metronome volume. (range: 0.0-3.0, default 0.0)
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.PlaybackSpeed">
            <summary>
            Gets or sets the current playback speed as percentage. (range: 0.125-8.0, default: 1.0)
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.TickPosition">
            <summary>
            Gets or sets the position within the song in midi ticks.
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.TimePosition">
            <summary>
            Gets or sets the position within the song in milliseconds.
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.PlaybackRange">
            <summary>
            Gets or sets the range of the song that should be played. Set this to null
            to play the whole song. 
            </summary>
        </member>
        <member name="P:AlphaSynth.IAlphaSynth.IsLooping">
            <summary>
            Gets or sets whether the playback should automatically restart after it finished. 
            </summary>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.Play">
            <summary>
            Starts the playback if possible
            </summary>  
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.Pause">
            <summary>
            Pauses the playback if was running
            </summary>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.PlayPause">
            <summary>
            Starts the playback if possible, pauses the playback if was running
            </summary>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.Stop">
            <summary>
            Stopps the playback
            </summary>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.LoadSoundFont(System.Byte[])">
             <summary>
            Loads a soundfont from the given data
             </summary>
             <param name="data">a byte array to load the data from </param>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.LoadMidi(System.Byte[])">
             <summary>
            Loads a midi from the given data
             </summary>
             <param name="data">a byte array to load the data from </param>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.SetChannelMute(System.Int32,System.Boolean)">
            <summary>
            Gets the mute state of a channel.
            </summary>
            <param name="channel">The channel number</param>
            <param name="mute">true if the channel should be muted, otherwise false.</param>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.ResetChannelStates">
            <summary>
            Resets the mute/solo state of all channels
            </summary>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.SetChannelSolo(System.Int32,System.Boolean)">
            <summary>
            Gets the solo state of a channel.
            </summary>
            <param name="channel">The channel number</param>
            <param name="solo">true if the channel should be played solo, otherwise false.</param>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.SetChannelVolume(System.Int32,System.Double)">
            <summary>
            Gets or sets the current and initial volume of the given channel.
            </summary>
            <param name="channel">The channel number.</param>
            <param name="volume">The volume of the channel (0.0-3.0)</param>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.SetChannelPan(System.Int32,System.Double)">
            <summary>
            Gets or sets the current and initial pan of the given channel.
            </summary>
            <param name="channel">The channel number.</param>
            <param name="pan">The pan of the channel (from -1.0 to 1.0)</param>
        </member>
        <member name="M:AlphaSynth.IAlphaSynth.SetChannelProgram(System.Int32,System.Byte)">
            <summary>
            Gets or sets the current and initial program of the given channel.
            </summary>
            <param name="channel">The channel number.</param>
            <param name="program">The midi program.</param>
        </member>
        <member name="P:AlphaSynth.ISynthOutput.SampleRate">
            <summary>
            Gets the sample rate required by the output.
            </summary>
        </member>
        <member name="M:AlphaSynth.ISynthOutput.Open">
            <summary>
            Called when the output should be opened.
            </summary>
        </member>
        <member name="M:AlphaSynth.ISynthOutput.SequencerFinished">
            <summary>
            Called when the sequencer finished the playback. 
            This tells the output not to request any samples anymore after the existing buffers are finished. 
            </summary>
        </member>
        <member name="M:AlphaSynth.ISynthOutput.Play">
            <summary>
            Called when the output should start the playback. 
            </summary>
        </member>
        <member name="M:AlphaSynth.ISynthOutput.Pause">
            <summary>
            Called when the output should stop the playback.
            </summary>
        </member>
        <member name="M:AlphaSynth.ISynthOutput.AddSamples(AlphaSynth.Ds.SampleArray)">
            <summary>
            Called when samples have been synthesized and should be added to the playback buffer.
            </summary>
            <param name="samples"></param>
        </member>
        <member name="M:AlphaSynth.ISynthOutput.ResetSamples">
            <summary>
            Called when the samples in the output buffer should be reset. This is neeed for instance when seeking to another position. 
            </summary>
        </member>
        <member name="E:AlphaSynth.ISynthOutput.Ready">
            <summary>
            Fired when the output has been successfully opened and is ready to play samples.
            </summary>
        </member>
        <member name="E:AlphaSynth.ISynthOutput.SamplesPlayed">
            <summary>
            Fired when a certain number of samples have been played. 
            </summary>
        </member>
        <member name="E:AlphaSynth.ISynthOutput.SampleRequest">
            <summary>
            Fired when the output needs more samples to be played. 
            </summary>
        </member>
        <member name="E:AlphaSynth.ISynthOutput.Finished">
            <summary>
            Fired when the last samples after calling SequencerFinished have been played. 
            </summary>
        </member>
        <member name="T:AlphaSynth.MidiFileSequencer">
            <summary>
            This sequencer dispatches midi events to the synthesizer based on the current
            synthesize position. The sequencer does not consider the playback speed. 
            </summary>
        </member>
        <member name="F:AlphaSynth.MidiFileSequencer._currentTime">
            <remarks>
            Note that this is not the actual playback position. It's the position where we are currently synthesizing at. 
            Depending on the buffer size of the output, this position is after the actual playback. 
            </remarks>
        </member>
        <member name="P:AlphaSynth.MidiFileSequencer.EndTick">
            <summary>
            Gets the duration of the song in ticks. 
            </summary>
        </member>
        <member name="P:AlphaSynth.MidiFileSequencer.EndTime">
            <summary>
            Gets the duration of the song in milliseconds. 
            </summary>
        </member>
        <member name="P:AlphaSynth.MidiFileSequencer.PlaybackSpeed">
            <summary>
            Gets or sets the playback speed. 
            </summary>
        </member>
        <member name="T:AlphaSynth.Synthesis.PlaybackRange">
            <summary>
            Represents a range of the song that should be played.
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.PlaybackRange.StartTick">
            <summary>
            The position in midi ticks from where the song should start.
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.PlaybackRange.EndTick">
            <summary>
            The position in midi ticks to where the song should be played.
            </summary>
        </member>
        <member name="T:AlphaSynth.Synthesis.SynthParameters">
            <summary>
            Parameters for a single synth channel including its program, bank, and cc list.
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.Program">
            <summary>
            program number
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.BankSelect">
            <summary>
            bank number
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.ChannelAfterTouch">
            <summary>
            channel pressure event
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.Pan">
            <summary>
            (vol) pan positions controlling both right and left output levels
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.Volume">
            <summary>
            (vol) channel volume controller
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.Expression">
            <summary>
            (vol) expression controller
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.ModRange">
            <summary>
            (pitch) mod wheel pitch modifier in partial cents ie. 22.3
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.PitchBend">
            <summary>
            (pitch) pitch bend including both semitones and cents
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.PitchBendRangeCoarse">
            <summary>
            controls max and min pitch bend range semitones
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.PitchBendRangeFine">
            <summary>
            controls max and min pitch bend range cents
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.MasterCoarseTune">
            <summary>
            (pitch) transposition in semitones
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.MasterFineTune">
            <summary>
            (pitch) transposition in cents
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.HoldPedal">
            <summary>
            hold pedal status (true) for active
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.LegatoPedal">
            <summary>
            legato pedal status (true) for active
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.SynthParameters.Rpn">
            <summary>
            registered parameter number
            </summary>
        </member>
        <member name="M:AlphaSynth.Synthesis.SynthParameters.ResetControllers">
            <summary>
            Resets all of the channel's controllers to initial first power on values. Not the same as CC-121.
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.MicroBufferSize">
            <summary>
            The size of the individual sub buffers in samples
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.MicroBufferCount">
            <summary>
            The number of sub buffers
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.SampleBuffer">
            <summary>
            Gets or sets the overall buffer of samples consisting of multiple microbuffers. 
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.SoundBank">
            <summary>
            The patch bank that holds all of the currently loaded instrument patches
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.SampleRate">
            <summary>
            The number of samples per second produced per channel
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.MasterVolume">
            <summary>
            The master volume 
            </summary>
        </member>
        <member name="P:AlphaSynth.Synthesis.Synthesizer.MetronomeVolume">
            <summary>
            The metronome volume 
            </summary>
        </member>
    </members>
</doc>
